% [LagInSeconds, CCF] = calculateCrossCorrelation(Trace,
% SegmentLengthInSeconds, MinLagInSeconds, MaxLagInSeconds,
% LagIntervalInSeconds)
function [LagInSeconds, CCF] = ...
    calculateCrossCorrelation(Trace, SegmentLengthInSeconds, ...
    MinLagInSeconds, MaxLagInSeconds, LagIntervalInSeconds)
    % The first segment is ignored as severe photobleaching/system
    % instability is often observed at the beginning of data acquisition.
    StartFromThisSegment = 2;
    
    SegmentsNumber = floor(Trace{1}.SampleTime / SegmentLengthInSeconds);
    CCF = zeros(SegmentsNumber - StartFromThisSegment + 1, length(...
        ceil(MinLagInSeconds / LagIntervalInSeconds) : ...
        floor(MaxLagInSeconds / LagIntervalInSeconds)));
        for i = StartFromThisSegment : SegmentsNumber
            TimeSeries1 = histcounts(Trace{1}.ArrivalTime, ...
                SegmentLengthInSeconds * (i - 1) : ...
                LagIntervalInSeconds : SegmentLengthInSeconds * i);
            TimeSeries2 = histcounts(Trace{2}.ArrivalTime, ...
                SegmentLengthInSeconds * (i - 1) : ...
                LagIntervalInSeconds : SegmentLengthInSeconds * i);
            CCF(i - StartFromThisSegment + 1, :) = ...
                calculateDiscreteTimeSeriesCrossCorrelation(...
                TimeSeries1, TimeSeries2,...
                ceil(MinLagInSeconds / LagIntervalInSeconds) : ...
                floor(MaxLagInSeconds / LagIntervalInSeconds));
        end
    CCF = mean(CCF);
    LagInSeconds = (ceil(MinLagInSeconds / LagIntervalInSeconds) : ...
        floor(MaxLagInSeconds / LagIntervalInSeconds)) * ...
        LagIntervalInSeconds;
end

function NormalizedCrossCovariance = ...
    calculateDiscreteTimeSeriesCrossCorrelation(TimeSeries1, ...
    TimeSeries2, LagArray)
    TimeSeries1 = double(TimeSeries1);
    TimeSeries2 = double(TimeSeries2);
    TimeSeriesMean1 = mean(TimeSeries1);
    TimeSeriesMean2 = mean(TimeSeries2);
    NormalizedTimeSeries1 = TimeSeries1 - TimeSeriesMean1;
    NormalizedTimeSeries2 = TimeSeries2 - TimeSeriesMean2;
    
    NormalizedCrossCovariance = zeros(size(LagArray));
    for i = 1 : length(LagArray)
        NormalizedCrossCovariance(i) = mean(...
            NormalizedTimeSeries1(LagArray(i) + 1 : end) ...
            .* NormalizedTimeSeries2(1 : end - LagArray(i))) ./ ...
            (TimeSeriesMean1 * TimeSeriesMean2);
    end
end